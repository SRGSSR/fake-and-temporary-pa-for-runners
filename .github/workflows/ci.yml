---
name: CI
on: [push]
env:
  MACOS_CI_SETUP_TOKEN: ${{ secrets.MACOS_CI_SETUP_TOKEN }}
  VM_NAME: sequoia-for-pillarbox
  VM_IMAGE: ghcr.io/cirruslabs/macos-sequoia-base:latest
jobs:
  install-tools:
    runs-on:
      labels: [tart, macos]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone macos-ci-setup repository
        run: |
          rm -rf ~/macos-ci-setup
          git clone -b add-scripts https://$MACOS_CI_SETUP_TOKEN@github.com/SRGSSR/macos-ci-setup.git ~/macos-ci-setup
      - name: Install tools
        run: |
          ./pillarbox-config-ci-env.sh

  setup-project:
    needs: install-tools
    runs-on:
      labels: [tart, macos]
    steps:
      - name: Setup project
        run: |
          cd ~/macos-ci-setup
          ./run-vm-shell-command.sh $VM_NAME "cd ~/_repo && rm -rf Configuration"
          ./run-vm-shell-command.sh $VM_NAME "cd ~/_repo && Scripts/checkout-configuration.sh https://$MACOS_CI_SETUP_TOKEN@github.com/SRGSSR/pillarbox-apple-configuration.git dad52a4242c7997c179073caec03b8d6e718fc03 Configuration"
          ./run-vm-shell-command.sh $VM_NAME "cd ~/_repo && make setup"

  # check-quality:
  #   needs: setup-project
  #   runs-on:
  #     labels: [tart, macos]
  #   steps:
  #     - name: Run the quality check
  #       run: |
  #         ~/macos-ci-setup/run-vm-shell-command.sh $VM_NAME "cd ~/_repo && make check-quality"

  run-streams:
    needs: install-tools
    runs-on:
      labels: [tart, macos]
    steps:
      - name: Run test streams
        run: |
          ~/macos-ci-setup/run-vm-shell-command.sh $VM_NAME "cd ~/_repo && make test-streams-start"

  test-ios:
    needs: [run-streams, setup-project]
    runs-on:
      labels: [tart, macos]
    steps:
      - name: Run the iOS tests
        run: |
          ~/macos-ci-setup/run-vm-shell-command.sh $VM_NAME "cd ~/_repo && make test-ios"

  test-tvos:
    needs: [run-streams, setup-project]
    runs-on:
      labels: [tart, macos]
    steps:
      - name: Run the tvOS tests
        run: |
          ~/macos-ci-setup/run-vm-shell-command.sh $VM_NAME "cd ~/_repo && make test-tvos"

  archive-demo-ios:
    needs: [test-ios, test-tvos]
    runs-on:
      labels: [tart, macos]
    steps:
      - name: Archive the iOS demo
        run: |
          ~/macos-ci-setup/run-vm-shell-command.sh $VM_NAME "cd ~/_repo && make archive-demo-ios"

  archive-demo-tvos:
    needs: [test-ios, test-tvos]
    runs-on:
      labels: [tart, macos]
    steps:
      - name: Archive the tvOS demo
        run: |
          ~/macos-ci-setup/run-vm-shell-command.sh $VM_NAME "cd ~/_repo && make archive-demo-tvos"

  clean:
    runs-on:
      labels: [tart, macos]
    needs: [archive-demo-ios, archive-demo-tvos]
    if: always()
    steps:
      - name: Stop and remove the VM
        run: |
          set +e
          tart stop $VM_NAME
          tart delete $VM_NAME
